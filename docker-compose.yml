services:
  frontend:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: frontendapp
    ports:
      - "80:80"
    networks:
      - app_net
    restart: unless-stopped
    depends_on:
      - backend1
      - backend2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  backend1:
    build:
      context: ./backend-app
      dockerfile: Dockerfile
    container_name: backendapp1
    expose:
      - 5000
    networks:
      - app_net
      - db_net
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_DB_HOST=postgres
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 15s

  backend2:
    build:
      context: ./backend-app
      dockerfile: Dockerfile
    container_name: backendapp2
    expose:
      - 5000
    networks:
      - app_net
      - db_net
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_DB_HOST=postgres
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 15s

  postgres:
    image: postgres:17.0-alpine
    container_name: postgresdb
    restart: always
    ports:
      - "5432:5432"
    networks:
      - db_net
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    secrets:
      - db_password

networks:
  app_net:
    driver: bridge
  db_net:
    driver: bridge


volumes:
  postgres-data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt
